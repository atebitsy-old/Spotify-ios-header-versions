//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTDrivingStateObserver-Protocol.h"
#import "SPTWazeDeepLinkObserver-Protocol.h"
#import "SPTWazeNavigationStateObserver-Protocol.h"
#import "SPTWazeTestManagerObserver-Protocol.h"

@class NSString, SPTAutoLockController, SPTWazeNavigationBannerViewModel, SPTWazeTransportManager;
@protocol SPTAutoLockOverrideToken, SPTDrivingStateDetector, SPTExternalIntegrationDebugLog, SPTLinkDispatcher, SPTPartnerTestManager, SPTWazeTestManager, SPTWazeViewModelDelegate;

@interface SPTWazeViewModel : NSObject <SPTDrivingStateObserver, SPTWazeNavigationStateObserver, SPTWazeTestManagerObserver, SPTWazeDeepLinkObserver>
{
    _Bool _shouldShowBanner;
    id <SPTWazeViewModelDelegate> _delegate;
    long long _state;
    SPTWazeNavigationBannerViewModel *_navigationViewModel;
    SPTWazeTransportManager *_wazeTransportManager;
    id <SPTDrivingStateDetector> _drivingStateDetector;
    id <SPTPartnerTestManager> _partnerTestManager;
    id <SPTLinkDispatcher> _linkDispatcher;
    id <SPTExternalIntegrationDebugLog> _debugLog;
    id <SPTWazeTestManager> _testManager;
    SPTAutoLockController *_autoLockController;
    id <SPTAutoLockOverrideToken> _autoLockToken;
}

@property(retain, nonatomic) id <SPTAutoLockOverrideToken> autoLockToken; // @synthesize autoLockToken=_autoLockToken;
@property(nonatomic) _Bool shouldShowBanner; // @synthesize shouldShowBanner=_shouldShowBanner;
@property(readonly, nonatomic) SPTAutoLockController *autoLockController; // @synthesize autoLockController=_autoLockController;
@property(readonly, nonatomic) id <SPTWazeTestManager> testManager; // @synthesize testManager=_testManager;
@property(readonly, nonatomic) id <SPTExternalIntegrationDebugLog> debugLog; // @synthesize debugLog=_debugLog;
@property(readonly, nonatomic) id <SPTLinkDispatcher> linkDispatcher; // @synthesize linkDispatcher=_linkDispatcher;
@property(readonly, nonatomic) __weak id <SPTPartnerTestManager> partnerTestManager; // @synthesize partnerTestManager=_partnerTestManager;
@property(readonly, nonatomic) __weak id <SPTDrivingStateDetector> drivingStateDetector; // @synthesize drivingStateDetector=_drivingStateDetector;
@property(readonly, nonatomic) SPTWazeTransportManager *wazeTransportManager; // @synthesize wazeTransportManager=_wazeTransportManager;
@property(retain, nonatomic) SPTWazeNavigationBannerViewModel *navigationViewModel; // @synthesize navigationViewModel=_navigationViewModel;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) __weak id <SPTWazeViewModelDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)applicationDidLaunchFromWazeDeepLink;
- (void)testManager:(id)arg1 didChangeWazeOnboardingCompleted:(_Bool)arg2;
- (void)updateShouldShowBannerWithDrivingState:(_Bool)arg1;
- (void)drivingStateDetector:(id)arg1 drivingStateDidChange:(id)arg2;
- (void)wazeNavigationDidEnd;
- (void)wazeNavigationDidStart;
- (void)openWazeInAppStore;
- (void)openWazeApp;
- (void)openWazeAppOrAppStorePage;
- (_Bool)canOpenWaze;
- (id)currentPresentationStateToString;
- (void)evaluateBannerPresentationBannerIsShown:(_Bool)arg1;
- (void)didRequestToCloseBanner;
- (void)didTapStartBannerCloseButton;
- (void)didTapConnectBannerCloseButton;
- (void)handleBannerTap;
- (void)didTapBanner;
- (void)didTapConnectBanner;
- (void)updateScreenLockingForState:(long long)arg1;
- (long long)evaluateNewState;
- (void)updateState;
- (void)dealloc;
- (id)initWithWazeTransportManager:(id)arg1 drivingStateDetector:(id)arg2 linkDispatcher:(id)arg3 debugLog:(id)arg4 testManager:(id)arg5 showBannerInitally:(_Bool)arg6 autoLockController:(id)arg7 partnerTestManager:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

