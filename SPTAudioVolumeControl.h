//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@protocol SPTAsyncScheduler;

@interface SPTAudioVolumeControl : NSObject
{
    // Error parsing type: ^{AudioVolumeControlManager=^^?{atomic<spotify::playback::AudioVolumeControl *>=A^{AudioVolumeControl}}{connection={shared_ptr<spotify::signals::connection::shared_state>=^{shared_state}^{__shared_weak_count}}}{signal<void (spotify::playback::VolumeChangeReason), spotify::signals::optional_last_value<void>, int, std::__1::less<int> >={shared_ptr<void>=^v^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{slot_vector={small_vector<spotify::signals::detail::connected_slot, 16, void, void>={vector_alloc_holder<boost::container::small_vector_allocator<spotify::signals::detail::connected_slot, boost::container::new_allocator<void>, void>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1> >=^{connected_slot}QQ}(aligned_struct_wrapper<40, 8>={aligned_struct<40, 8>=[40C]}[40C])[15(aligned_struct_wrapper<40, 8>={aligned_struct<40, 8>=[40C]}[40C])]}B}{optional_last_value<void>=}{less<int>=}}i}, name: _volumeControlManager
    id <SPTAsyncScheduler> _scheduler;
}

+     // Error parsing type: @32@0:8^{AudioVolumeControlManager=^^?{atomic<spotify::playback::AudioVolumeControl *>=A^{AudioVolumeControl}}{connection={shared_ptr<spotify::signals::connection::shared_state>=^{shared_state}^{__shared_weak_count}}}{signal<void (spotify::playback::VolumeChangeReason), spotify::signals::optional_last_value<void>, int, std::__1::less<int> >={shared_ptr<void>=^v^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{slot_vector={small_vector<spotify::signals::detail::connected_slot, 16, void, void>={vector_alloc_holder<boost::container::small_vector_allocator<spotify::signals::detail::connected_slot, boost::container::new_allocator<void>, void>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1> >=^{connected_slot}QQ}(aligned_struct_wrapper<40, 8>={aligned_struct<40, 8>=[40C]}[40C])[15(aligned_struct_wrapper<40, 8>={aligned_struct<40, 8>=[40C]}[40C])]}B}{optional_last_value<void>=}{less<int>=}}i}16@24, name: volumeControlWithVolumeControlManager:scheduler:
@property(nonatomic) __weak id <SPTAsyncScheduler> scheduler; // @synthesize scheduler=_scheduler;
- (void).cxx_destruct;
- (void)setAudioVolume:(float)arg1 systemInitiated:(_Bool)arg2;
- (void)invalidate;
-     // Error parsing type: @32@0:8^{AudioVolumeControlManager=^^?{atomic<spotify::playback::AudioVolumeControl *>=A^{AudioVolumeControl}}{connection={shared_ptr<spotify::signals::connection::shared_state>=^{shared_state}^{__shared_weak_count}}}{signal<void (spotify::playback::VolumeChangeReason), spotify::signals::optional_last_value<void>, int, std::__1::less<int> >={shared_ptr<void>=^v^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{slot_vector={small_vector<spotify::signals::detail::connected_slot, 16, void, void>={vector_alloc_holder<boost::container::small_vector_allocator<spotify::signals::detail::connected_slot, boost::container::new_allocator<void>, void>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1> >=^{connected_slot}QQ}(aligned_struct_wrapper<40, 8>={aligned_struct<40, 8>=[40C]}[40C])[15(aligned_struct_wrapper<40, 8>={aligned_struct<40, 8>=[40C]}[40C])]}B}{optional_last_value<void>=}{less<int>=}}i}16@24, name: initWithVolumeControlManager:scheduler:

@end

